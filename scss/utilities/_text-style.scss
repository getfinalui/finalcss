
/// State based or semantic text colors
.text-base{ color: var(--text-color-base); }
.text-secondary{ color: var(--text-color-secondary);  }
.text-muted{ color: var(--text-color-muted);  }
.text-primary{ color: var(--text-color-primary); }
.text-warning{ color: var(--text-color-warning); }
.text-danger{ color: var(--text-color-danger); }
.text-success{ color: var(--text-color-success); }
.text-info{ color: var(--text-color-info); }
.text-invert{ color: var(--text-color-invert); }
.text-black{ color:#000; }
.text-dark{ color:#000; }
.text-white{ color:#fff; }


//// More text colors with hover support
@each $num, $value in $blue_list {
  .text-blue-#{$num} { color:var(--blue-#{$num});  }
  .hover\:text-blue-#{$num}:hover { color:var(--blue-#{$num}); }
  .group:hover .group-hover\:text-blue-#{$num} { color:var(--blue-#{$num}); }
}

@each $num, $value in $green_list {
  .text-green-#{$num} { color:var(--green-#{$num});  }
  .hover\:text-green-#{$num}:hover { color:var(--green-#{$num}); }
  .group:hover .group-hover\:text-green-#{$num} { color:var(--green-#{$num}); }
}

@each $num, $value in $red_list {
  .text-red-#{$num} { color:var(--red-#{$num});  }
  .hover\:text-red-#{$num}:hover { color:var(--red-#{$num}); }
  .group:hover .group-hover\:text-red-#{$num} { color:var(--red-#{$num}); }
}

@each $num, $value in $orange_list {
  .text-orange-#{$num} { color:var(--orange-#{$num});  }
  .hover\:text-orange-#{$num}:hover { color:var(--orange-#{$num}); }
  .group:hover .group-hover\:text-orange-#{$num} { color:var(--orange-#{$num}); }
}

@each $num, $value in $yellow_list {
  .text-yellow-#{$num} { color:var(--yellow-#{$num});  }
  .hover\:text-yellow-#{$num}:hover { color:var(--yellow-#{$num}); }
  .group:hover .group-hover\:text-yellow-#{$num} { color:var(--yellow-#{$num}); }
}

@each $num, $value in $purple_list {
  .text-purple-#{$num} { orangcolor:var(--purple-#{$num});  }
  .hover\:text-purple-#{$num}:hover { color:var(--purple-#{$num}); }
  .group:hover .group-hover\:text-purple-#{$num} { color:var(--purple-#{$num}); }
}

@each $num, $value in $teal_list {
  .text-teal-#{$num} { color:var(--teal-#{$num});  }
  .hover\:text-teal-#{$num}:hover { color:var(--teal-#{$num}); }
  .group:hover .group-hover\:text-teal-#{$num} { color:var(--teal-#{$num}); }
}




/// text utility classes
.font-light {  font-weight: 300!important;}
.font-normal {font-weight: 400!important;}
.font-medium { font-weight: 500!important; }
.font-semibold { font-weight: 600!important;}
.font-bold { font-weight: 700!important; }
.font-bolder { font-weight: bolder!important;}

.text-wrap { text-wrap: wrap!important; }
.text-balance{ text-wrap: balance!important; }
.text-pretty { text-wrap: pretty!important; } 

.text-decoration-none { text-decoration: none!important; }
.text-underline { text-decoration: underline!important; }
.text-line-through { text-decoration: line-through!important; }
.text-lowercase { text-transform: lowercase!important; }
.text-uppercase { text-transform: uppercase!important;}
.text-capitalize { text-transform: capitalize!important;}
.text-wrap {white-space: normal!important;}
.text-nowrap { white-space: nowrap!important; text-wrap: nowrap!important; }
.text-truncate{text-overflow: ellipsis; white-space: nowrap; overflow: hidden; }

/// line height
.lh-1{ line-height:1; }
.lh-sm{ line-height:1.125; }
.lh-base{ line-height:1.5; }
.lh-lg{ line-height:1.8; }


/// text-position
.text-left {text-align: left;}
.text-right {text-align: right;}
.text-center { text-align: center;}


// Generate responsive utility classes
// breakpoints can be changed from base-settings.scss
@each $breakpoint, $size in $breakpoints {

  $media_type: min-width !default;
  
  @if ($breakpoint == 'max-lg' or $breakpoint == 'max-md' or $breakpoint == 'max-sm') { 
    $media_type: 'max-width';
  }

  @media ( $media_type: #{$size}){
    
    .#{$breakpoint}\:text-left {text-align: left;}
    .#{$breakpoint}\:text-right {text-align: right;}
    .#{$breakpoint}\:text-center { text-align: center;}

    // end breakpoint
  }
}


